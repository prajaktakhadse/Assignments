Q2
a) What are the advantages of using spring boot over spring.
Ans:--Advantages are:-
    1.It aims to shortens the code length  and provide provide easiest way to develop web applications.
    2. Provides embedded container suppport.
    3. it reduces boilerplate code.
    4. No need for the deployment of war files.
    5.No need for xml configuration.
    6. Spring boot offers embedded server such as Tomcat,Jetty etc.
    7. Simple setup and management.
    8.It helps  to create standalone applications.
    9. As it reduce the code testing is easy.

b) Explain types of Bean Scopes and Explain any two of them.
Ans:--
   Types of Bean Scope are:-
   1.Singleton
   2.Prototype
   3.request
   4.session
   

  1.Singleton:
              This is the default type of spring bean scope.It return same bean  class objetc for all the getBean()
    method  call with the same bean id.   i.e. whenever we are pulling e an object wit the same id multiple time, contaner will return same object. 
    This scope implies that Spring container will create an only shared instance of the class designated by this bean, 
    so each time the Bean is required the same object will be injected. if the same bean class is configured with differ id then container creates
    one more object for that bean , it means container make a spring bean object as a singleton with respect to the id.

  Ex:-
   A obj1 = ctx.getBean("a1",A.class);

   A obj2 = ctx.getBean("a1",A.class);


   System.out.println(obj1 == obj2);
   now it will create the object  in container.


  2. Prototype:-
             It produces a new instance  each and every time is bean as a requested. It returns a separate bean class for every getBean()
     method call with the same id. To put the bean object in Prototype scope  we need to mention by using scopr attribute of the bean tag.


   <bean id = "**" class = "**" scope = "prototype">
 
  


   </bean>

   
A obj1 = ctx.getBean("a1",A.class);

   A obj2 = ctx.getBean("a1",A.class);

    System.out.println(obj1 == obj2); 
  here, it will create  new object every time in container and return as true.

**************************************************************************************************************************************
Q3 What are
1. SOAP-based Webservices
Ans:-- SOAP stands for Simple Object Access Protocol.It is an XML based protocol, to communicate between the client applications to the server application, 
       since it is XML based, it is platform-independent and language independent.It has some specification which could be used across all applications.
       SOAP was developed as an intermediate language so that applications built on various programming languages could talk easily to each other and 
       avoid the extreme development effort.
       Advantages:--
       SOAP is a light-weight protocol that is used for data interchange between applications.
       It is a platform & language indpendent.
       SOAP defines its own security.
      


2. Restful Web Services
Ans:-- REST stands for REpresentational State Transfer. REST is an architectural style . It  create a web service with the required operation
       and expose them through the HTTP protocol and allow them to be accessed by the client with the help of http protocol only without any binding
       classes and any XML files.
       The resource has representations like XML, HTML, and JSON. The current state is capture by representational resources. When we
       request a resource, we provide the representation of the resource. The important methods of HTTP are:
       GET: It reads a resource.
       PUT: It updates an existing resource.
       POST: It creates a new resource.
       DELETE: It deletes the resource.

      Advantages of RESTful web services
      RESTful web services are platform-independent.
      It can be written in any programming language and can be executed on any platform.
      It provides different data formats like JSON, text, HTML, and XML.
      It is fast in comparison to SOAP because there is no strict specification like SOAP.
      These are reusable.
      They are language neutral.
      


**********************************************************************************************************************************************************
Q4 a) What is difference between @RestController and @Controller
Ans:--- 1. The @Controller is a annotation to mark class as Controller Class in Spring While @RestController is used in REST Web services and similar to 
           @Controller and @ResponseBody annotation.
        2. The @Controller annotation indicates that the class is controller like web Controller while @RestController annotation indicates that the class
           is controller where @RequestMapping Method assume @ResponseBody by Default(i.e REST APIs).
        3. With @Controller annotation you still have that control that you can annotate individual methods with @ResponseBody annotation.
           With @RestController annotation all the handler methods of the class write their result to the response body.
        4. Key difference between a traditional MVC @Controller and the RESTful web service @RestController
 
          is the way that the HTTP response body is created. Rather than relying on a view technology to perform server-side 
 
           rendering of the data to HTML, the rest controller simply populates and returns the domain object itself.

b) What is the use of @Autowired annotation?Explain
Ans:--The @Autowired annotation is used in the class constructor method. In the spring boot, @Autowired assigns values to the constructor.
      This is an alternative to using the @Autowired annotation in properties.This annotation we can apply on the fields/variable or the setter method 
     or on the constructor of a spring bean.The variable on which we apply the @Autowired annotation must be a reference type variable not the primitive variable.
      If we apply @Autowired annotation on the top of the reference variable then no need to
     explicitly define the setter method. (setter injection point). at runtime container implicitly defines the setter method for that field.
     If we apply this @Autowire annotation on the reference field, then the container will search the "registered bean"(which spring bean is already
    registered with the container) by using either byName approach or by using byType approach, and if found then the container will inject that
    Spring bean object to this reference field. If not found any registered bean, then the container will throw an exception.
    Advantages of Autowiring
:---
    1. Autowiring requires less code because we don’t need to write the code to inject the dependency explicitly.
    
2. It reduces develop time by removing the necessity of specifying properties and constructor arguments.
    

Disavdantages :
--
   1. Wiring information may not be available to tools that generate documentation from a Spring container.
   2. Multiple bean definition within the container may match the type specified by the constructor or setter method argument to be autowired.
***************************************************************************************************************************************************************************






      

   
           


   
    